6/3
5/3
##############
10%%5
##############
10%%3
31%/%7
17:58
(17:58)+pi
x+y
x+y
x+y
x<-5
y<-6
x+y
a<-17:58
mean.a<-mean(a)
mean.a
example(mean)
objects()
#Working with numeric vectors:-----
c(0, 7, 8)
x <- c(0, 7, 8)
x
numbers5to20 <- 5:20
numbers5to20 <- 5:20
c(numbers5to20, x)
c(x, numbers5to20)
some.numbers <- c(2, 3, 5, 7, 11, 103, 97, 114, 75, 34)
some.numbers <- c(2, 3, 5, 7, 11, 103, 97, 114, 75, 34)
a.mess <- c(some.numbers, numbers5to20, x, 4:1)
a.mess
22
#We can extract elements from a vector:
a.mess[22]
c(3,6,7)
a.mess[c(3,6,7)]
c(2,10
c(2,10)
numbers5to20[-c(2,10)]
#Vector arithmetic
x * 3
y <- x - 5
pi*(c(3:100)^2)
# -Perimeter of varius circles with radii of (20,22,24,26)
pi*2*(c(20,22,24,26))
#Patterned vectors
seq(1, 21, by =2)
rep(3, 12) #repeat value 3, 12 times
rep(seq(2,20, by=2), 2) #repeat sequence 2,20 twice
sample(1:6, size=100, replace=T) #an imaginary die is tossed 8 times
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
#character vectors
colors <- c("red", "yellow", "blue")
sample(1:6, size=8, replace=F) #an imaginary die is tossed 8 times
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
#character vectors
colors <- c("red", "yellow", "blue")
more.colors <- c(colors, "green","magenta","cyan")
more.colors <- c(colors, "green","magenta","cyan")
more.colors
substr(colors, 2,3) #print first two letters of each color
substr(colors, 1,2) #print first two letters of each color
paste(colors, "flowers")
paste("several ", colors, "s", sep="")
paste("I like", colors, collapse=", ")
colors[colors %in% c("blue","yellow")]
#Factors
#efficient way of storing characters when there are repeats
grp <- c("control", "treatment", "control", "treatment")
grp
grp <- factor(grp)
grp
v
levels(grp)
levels(grp)[1] <- "placebo"
levels(grp)
grp <- factor(grp)
grp <- factor(grp)
#Matrices
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m[1,2]
m[1,]
m[,2]
threeM
#Relational operators and conditionals
threeM <- c(3, 6, 9)
threeM
threeM > 4
threeM ==4
threeM !=4
threeM < 4
threeM[threeM > 4]
x <- -5
y1 <- 5
if(x < 5){
y1 = 0
}
y1
if(x > 10){
message("x is greater than 10")
} else if (x > 0){
message ("x is greater than 0")
} else if (x > -5){
message("x is greater than -5")
} else {
message("x must be less than -5")
}
x <- 4
if(x > 10){
message("x is greater than 10")
} else if (x > 0){
message ("x is greater than 0")
} else if (x > -5){
message("x is greater than -5")
} else {
message("x must be less than -5")
}
#Data frames and lists
names(women)
str(women)
women
head(women)
#extracting data frame elements
women[,2]
women$height
women[,1]
women[women$weight>140, c("weight","height")]
women[women$weight>140,]
women[women$height!=63,]
women[women$height!=63,c("weight")]
#Constructing data frames
gender <- c("M", "M", "F", "F", "F")
weight <- c(73, 68, 52, 69, 64)
height <- c(145, 167, 178, 149, 150)
obesitystudy <- data.frame(gender, weight, height)
str(obesitystudy)
obesitystudy
names(obesitystudy)
colnames(obesitystudy) <- paste(colnames(obesitystudy), ".1", sep="")
names(obesitystudy)
obesitystudy[obesitystudy$gender.1 %in% "M",]
obesitystudy[obesitystudy$gender.1 %in% "M" & obesitystudy$weight.1 <70,]
obesitystudy[obesitystudy$gender.1 %in% "M" | obesitystudy$gender.1 %in% "F" & obesitystudy$weight.1 <69,]
obesitystudy[obesitystudy$gender.1 %in% "M" | obesitystudy$gender.1 %in% "F" & obesitystudy$weight.1 <69,]
obesitystudy[(obesitystudy$gender.1 %in% "M" | obesitystudy$gender.1 %in% "F") & obesitystudy$weight.1 <69,]
#machos y hembras que pesen mas de 65
obesitystudy[(obesitystudy$gender.1 %in% "M" | obesitystudy$gender.1 %in% "F") & obesitystudy$weight.1 >65,]
obesitystudy[obesitystudy$gender.1 %in% "M" & obesitystudy$height.1 > 150 | obesitystudy$gender.1 %in% "F" & obesitystudy$weight.1 <60,]
total <- 0
x <- 4:6
for(i in 1:length(x)){
total = total + x[i]
}
total
for(i in 1:lenght(obesitystudy$height.1)){
obesitystudy&bmi[i] <- obesitystudy$weight.1/(obesitystudy$height.1^2)
}
for(i in 1:length(obesitystudy$height.1)){
obesitystudy&bmi[i] <- obesitystudy$weight.1/(obesitystudy$height.1^2)
}
for(i in 1:length(obesitystudy$height.1)){
obesitystudy$bmi[i] <- obesitystudy$weight.1/(obesitystudy$height.1^2)
}
for(i in 1:length(obesitystudy$height.1)){
obesitystudy$bmi[i] <- obesitystudy$weight.1[i]/(obesitystudy$height.1[i]^2)
}
for(i in 1:length(obesitystudy$height.1)){
obesitystudy$bmi[i] <- obesitystudy$weight.1[i]/(obesitystudy$height.1[i]^2)
}
obesitystudy
#Functions
fun2 <- function(x,y){
return(x*y)
}
fun2(5,12345)
#-------------------
obesitystudy
obesitystudy[obesitystudy$gender %in% c("M", "F") if(weight.1 > 65){
obesitystudy[obesitystudy$gender %in% c("M", "F")if(weight.1 > 65){
obesitystudy[obesitystudy$gender %in% c("M", "F")if(weight.1 > 65){
ibm (obesitystudy$weight.1, obesitystudy$height.1)
} else if (weight.1<65){
message ("Individual weights below 65")
}]
ibm <- function(weight.1, height.1){
return(weight.1/(height.1^2))
}
if(obesitystudy$weight.1 > 65){
ibm (obesitystudy$weight.1, obesitystudy$height.1)
} else if (weight.1<65){
message ("Individual weights below 65")
}
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 > 65){
ibm (obesitystudy$weight.1, obesitystudy$height.1)
} else if (weight.1<65){
message ("Individual weights below 65")
}
}
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (weight.1<65){
message ("Individual weights below 65")
}
}
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (weight.1[i]<65){
message ("Individual weights below 65")
}
}
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (obesitystudy$weight.1[i]<65){
message ("Individual weights below 65")
}
}
obesitystudy
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (obesitystudy$weight.1[i]<65){
obesitystudy$bmi[i]<-"Individual weights below 65"
}
}
obesitystudy
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
obesitystudy$bmi[i]<-ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (obesitystudy$weight.1[i]<65){
obesitystudy$bmi[i]<-"Individual weights below 65"
}
}
obesitystudy
obesitystudy$bmi.1[i]<-"Individual weights below 65"
for(i in 1:length(obesitystudy$height.1)){
if(obesitystudy$weight.1 [i] > 65){
obesitystudy$bmi.1[i]<-ibm (obesitystudy$weight.1[i], obesitystudy$height.1[i])
} else if (obesitystudy$weight.1[i]<65){
obesitystudy$bmi.1[i]<-"Individual weights below 65"
}
}
obesitystudy
setwd("C:/Users/Oscar Gracía Mirada/extinction_data/input")
setwd("C:/Users/Oscar Gracia Mirada/extinction_data/input")
setwd("C:\Users\Oscar Gracía Mirada\extinction_data\input")
setwd("C:/Users/Oscar Gracía Mirada/extinction_data/input")
setwd("C:/Users/Oscar Gracía Mirada/extinction_data/Literature search/input")
csvfiles <- list.files(path = ".", pattern='*\\.csv$', all.files=TRUE)
#########################################################
#Fill in data into database
#########################################################
#Load datasets
xlsxfiles <- list.files(path = ".", pattern='*\\.xlsx$', all.files=TRUE)
install.packages("openxlsx")
library(openxlsx) #instalar primero
import.list <- lapply(xlsxfiles[2], read.xlsx, sheet=1, colNames =
TRUE, na.strings=c("NA","na","N","-","---"," ","",".","sin
dato","SD","sd","Sin Dato", -999,"-999"))
#str(import.list)
ls()
working.list <- import.list
names(working.list) <- c("db")
attach(working.list)
import.list <- lapply(xlsxfiles[2], read.xlsx, sheet=1, colNames =
TRUE, na.strings=c("NA","na","N","-","---"," ","",".","sin
dato","SD","sd","Sin Dato", -999,"-999"))
#########################################################
#Fill in data into database
#########################################################
#Load datasets
xlsxfiles <- list.files(path = ".", pattern='*\\.xlsx$', all.files=TRUE)
xlsxfiles
library(openxlsx) #instalar primero
import.list <- lapply(xlsxfiles[2], read.xlsx, sheet=1, colNames =
TRUE, na.strings=c("NA","na","N","-","---"," ","",".","sin
dato","SD","sd","Sin Dato", -999,"-999"))
import.list <- lapply(xlsxfiles, read.xlsx, sheet=1, colNames =
TRUE, na.strings=c("NA","na","N","-","---"," ","",".","sin
dato","SD","sd","Sin Dato", -999,"-999"))
working.list <- import.list
names(working.list) <- c("db")
attach(working.list)
names(db2)
names(db)
###########################################################
db2 <- db
names(db2)
#Example with reptiles--------------
#Choose Class to work with
table(db2$Class)
str(db2[db2$Class %in% "ACTINOPTERYGII","CEPHALASPIDOMORPHI"," MYXINI",
"CHONDRICHTHYES","SARCOPTERYGII",]) #6278 obs
db.rep <- db2[db2$Class %in% c("ACTINOPTERYGII","CEPHALASPIDOMORPHI"," MYXINI",
"CHONDRICHTHYES","SARCOPTERYGII") & !is.na(db2$male_svl_cm) & !is.na(db2$female_svl_cm),]
db.fish <- db2[db2$Class %in% c("ACTINOPTERYGII","CEPHALASPIDOMORPHI"," MYXINI",
"CHONDRICHTHYES","SARCOPTERYGII") & !is.na(db2$male_svl_cm) & !is.na(db2$female_svl_cm),]
str(db.fish)#161 obs
head(db.fish)
db.fish[1:3,"binomial"]
