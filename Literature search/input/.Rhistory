log(1)
1-0.69
0.69/0.31
log(2.226)
log(0.225806)
log(2.225806)
0.8001191/2
library("MuMIn", lib.loc="~/R/win-library/3.2")
citation
citation()
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
save(installedpkgs, file="installed_old.rda")
tmp
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
library(installr)
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
library(devtools)
install.packages("devtools")
install_github("ropensci/ecoretriever")
library(devtools)
install_github("ropensci/ecoretriever")
library(ecoretriever)
library(ecoretriever)
library(ecoretriever)
library(rdataretriever)
datasets()
ecoretriever::datasets()
rdataretriever::datasets()
rdataretriever::datasets()
ecoretriever::install('Gentry', 'csv')
rdataretriever::install('Gentry', 'csv')
library(rdataretriever)
rdataretriever::datasets()
rdataretriever::install('Gentry', 'csv')
getupdates()
rdataretriever::get_updates()
rdataretriever::install('Gentry', 'csv')
rdataretriever::datasets()
rdataretriever::install('pantheria', 'csv')
rdataretriever::datasets()
rdataretriever::fetch("mammal-masses")
rdataretriever::datasets()
rdataretriever::fetch("mammal-life-hist")
rdataretriever::datasets()
rdataretriever::fetch("vertnet-amphibians")
rdataretriever::fetch("vertnet-amphibians")
rdataretriever::fetch("vertnet-amphibians")
rdataretriever::datasets()
56679/708
3^4
7*4
%%
31%%7
31%/%7
17:58
(17:58)+pi
interest.30 <- 1.0025^30 #compound interes calculation based on an interest rate of 0.25% per year and a 30 year term
interest.30
interest.30 <- 1.0025^30 #compound interes calculation based on an interest rate of 0.25% per year and a 30 year term
initialbalance <- 3000
finalbalance <- initialbalance * interest.30
finalbalance
initialbalance <- 200000
finalbalance <- initialbalance * interest.30
finalbalance
a <- 17:58
mean.a <- mean(a)
mean.a
example(mean)
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
objects()
c(0, 7, 8)
x <- c(0, 7, 8)
x
numbers5to20 <- 5:20
c(numbers5to20, x)
c(x, numbers5to20)
some.numbers <- c(2, 3, 5, 7, 11, 103, 97, 114, 75, 34)
a.mess <- c(some.numbers, numbers5to20, x, 4:1)
a.mess
a.mess[22]
a.mess[c(3,6,7)]
numbers5to20[-c(2,10)]
numbers5to20
x * 3
x
y <- x - 5
y
r <- 1.08
n <- c(10,20,30,40)
1-r^(n+1)/(1-r)
pi * ((3:100)^2)
pi * (c(20,22,24,26)*2)
pi * (c(3:100)^2)
seq(1, 21, by =2)
rep(3, 12) #repeat value 3, 12 times
rep(seq(2,20, by=2), 2) #repeat sequence 2,20 twice
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
colors <- c("red", "yellow", "blue")
sample(1:6, size=8, replace=T) #an imaginary die is tossed 8 times
sample(1:6, size=100, replace=T) #an imaginary die is tossed 8 times
sample(1:6, size=100, replace=F) #an imaginary die is tossed 8 times
sample(1:6, size=100, replace=F) #an imaginary die is tossed 8 times
sample(1:6, size=100, replace=T) #an imaginary die is tossed 8 times
colors <- c("red", "yellow", "blue")
colors <- c(red, yellow, blue)
more.colors <- c(colors, "green","magenta","cyan")
more.colors
substr(colors, 1,2) #print first two letters of each color
substr(colors, 1,4) #print first two letters of each color
substr(colors, 2,2) #print first two letters of each color
substr(colors, 2,3) #print first two letters of each color
paste(colors, "flowers")
paste(colors, "flowers")
paste("several ", colors, "s", sep="")
paste("I like", colors, collapse=", ")
grp <- c("control", "treatment", "control", "treatment")
grp
grp <- factor(grp)
grp
levels(grp)
levels(grp)[1]
levels(grp)[1] <- "placebo"
grp
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m[1,2]
m[1,]
m[,2]
threeM <- c(3, 6, 9)
threeM > 4
threeM ==4
threeM !=4
threeM !>4
threeM < 4
threeM[threeM > 4]
colors[colors %in% "e"]
colors[colors %in% "blue"]
colors[colors %in% c("blue","yellow")]
x <- 5
x <- 5
y1 <- 5
if(x < 5){
y1 = 0
}
y1
x <- 3
y1 <- 5
if(x < 5){
y1 = 0
}
y1
if(x > 10){
message("x is greater than 10")
} else if (x > 0){
message ("x is greater than 0")
} else if (x > -5){
message("x is greater than -5")
} else {
message("x must be less than -5")
}
x <- -5
if(x > 10){
message("x is greater than 10")
} else if (x > 0){
message ("x is greater than 0")
} else if (x > -5){
message("x is greater than -5")
} else {
message("x must be less than -5")
}
names(women)
str(women)
women
women[4,1]
women[,2]
women$height
women[,1]
women[women$weight>140,]
women[women$weight>140,2]
women[women$weight>140,weight]
women[women$weight>140,"weight"]
women[women$weight>140, c("weight","height")]
gender <- c("M", "M", "F", "F", "F")
weight <- c(73, 68, 52, 69, 64)
obesitystudy <- data.frame(gender, weight)
obesitystudy
str(obesitystudy)
colnames(obesitystudy)
colnames(obesitystudy) <- paste(colnames(obesitystudy), ".1", sep="")
colnames(obesitystudy)
obesitystudy[obesitystudy$gender.1 %in% "M",]
obesitystudy[obesitystudy$gender.1 %in% "M" & obesitystudy$weight.1 <70,]
obesitystudy[obesitystudy$gender.1 %in% "M" | obesitystudy$gender.1 %in% "F" & obesitystudy$weight.1 <69,]
gender <- c("M", "M", "F", "F", "F")
weight <- c(73, 68, 52, 69, 64)
height <- c(145, 167, 178, 149, 150)
obesitystudy <- data.frame(gender, weight, height)
obesitystudy
obesitystudy[obesitystudy$height > 150,]
obesitystudy[obesitystudy$gender %in% c("M", "F") & obesitystudy$height > 150,]
obesitystudy[obesitystudy$gender %in% "M" & obesitystudy$weight < 70 | obesitystudy$gender %in% "F" & obesitystudy$height > 150]
obesitystudy[obesitystudy$gender %in% "F" & obesitystudy$weight < 69, >69,]
obesitystudy[obesitystudy$gender %in% "F" & obesitystudy$weight !=69,]
obesitystudy[obesitystudy$gender %in% "F" & obesitystudy$weight < 69 & obesitystudy$weight >69,]
obesitystudy[obesitystudy$gender %in% "F" & obesitystudy$weight < 69 | obesitystudy$weight >69,]
obesitystudy[obesitystudy$gender %in% "F" & obesitystudy$weight < 69 | obesitystudy$gender %in% "F" & obesitystudy$weight >69,]
total <- 0
x <- 4:6
for(i in 1:length(x)){
total = total + x[i]
}
total
fun2 <- function(x,y){
return(x*y)
}
fun2(3,4)
fun2(5,12345)
obesitystudy
120/1.65
120/(1.65^2)
setwd("C:/Users/cris.carmona/Documents/MEGAsync/Projects/Post-doc/Riesgo de extinción y selección sexual/extinction_data/Literature search/input")
xlsxfiles <- list.files(path = ".", pattern='*\\.xlsx$', all.files=TRUE)
xlsxfiles
library(openxlsx) #instalar primero
import.list <- lapply(xlsxfiles, read.xlsx, sheet=1, colNames = TRUE, na.strings=c("NA","na","N","-","---"," ","",".","sin dato","SD","sd","Sin Dato", -999,"-999"))
#str(import.list)
ls()
working.list <- import.list
names(working.list) <- c("db")
attach(working.list)
###########################################################
names(db)
#Example with reptiles--------------
#Choose Class to work with
table(db$Class)
str(db[db$Class %in% "REPTILIA",]) #6278 obs
db.rep <- db[db$Class %in% c("REPTILIA") & !is.na(db$male_svl_cm) & !is.na(db$female_svl_cm),]
str(db.rep)#253 obs
db.rep[1:5,"binomial"]
#db.rep[1:5,]
# [1] "Acanthodactylus erythrurus" ASR and mating system (CCI 26/06/18)
# [2] "Acanthophis laevis"        no data available (CCI 26/06/28)
# [3] "Acanthophis rugosus"       no data available (CCI 13/06/2018)
# [4] "Acrochordus arafurae"      scrambling mating system (CCI 27/06/2018)
# [5] "Acrochordus granulatus"    no data available (CCI 27/06/2018)
db.rep[6:10,"binomial"]
# [1] "Agkistrodon contortrix"  Added ASR (CCI 29 jun 2018)
# [2] "Agkistrodon piscivorus"  data already known
# [3] "Aipysurus laevis"       Added ASR and sex dimorphism (CCI 29 jun 2018)
# [4] "Ameiva atrigularis"   no data available (CCI 13/06/2018)
# [5] "Ameiva praesignis"   no data available (CCI 13/06/2018)
db.rep[11:15,"binomial"]
# [1] "Anilios ammodytes" no data available (CCI 13/06/2018)
# [2]"Anilios australis"     no data available (CCI 13/06/2018)
# [3] "Anilios bituberculatus"  no data available (CCI 13/06/2018)
# [4]"Anilios diversus"      no data available (CCI 13/06/2018)
# [5] "Anilios endoterus"   no data available (CCI 13/06/2018)
db.rep[16:20,"binomial"]
#[1] "Anilios ligatus"     no data available (CCI 13/06/2018)
#"Anilios pinguis"    no data available (CCI 13/06/2018)
#[3] "Anolis carolinensis"  ASR and Mating system already known from adw
#"Antaresia childreni"  no data available(CCI 13/06/2018)
#[5] "Antaresia maculosa"  no data available (CCI 13/06/2018)
db.rep[21:25,"binomial"]
# [1] "Antaresia perthensis"  no data available (CCI 03/07/2018)
# [2] "Antaresia stimsoni"    found derived ASR from pythons encountered on road and marked (CCI 03/07/2018)
# [3] "Archaeolacerta bedriagae" no data available (CCI 03/07/2018)
# [4] "Arizona elegans"         no data available for ASR (CCI 03/07/2018)
# [5] "Aspidites melanocephalus" no data available for ASR (CCI 03/07/2018)
db.rep[26:30, "binomial"]
# [1] "Aspidites ramsayi"        No data available for ASR (CCI 04/07/2018)
# [2] "Aspidomorphus lineaticollis" found ASR (CCI 04/07/2018)
# [3] "Aspidomorphus muelleri"     found ASR (CCI 04/07/2018)
# [4] "Aspidomorphus schlegelii"   found ASR (CCI 04/07/2018)
# [5] "Atractus major" No data available (CCI 05/07/2018)
db.rep[31:35, "binomial"]
# [1] "Atractus resplendens"  No data available (CCI 05/07/2018)
# [2] "Austrelaps labialis"    No data available (CCI 05/07/2018)
# [3] "Basiliscus vittatus"   No data available (CCI 05/07/2018)
# [4] "Brachyurophis approximans" No data available (CCI 05/07/2018)
# [5] "Brachyurophis australis"   No data available (CCI 05/07/2018)
db.rep[36:40, "binomial"]
# [1] "Brachyurophis fasciolatus"  No data available (CCI 05/07/2018)
# [2] "Brachyurophis incinctus"    No data available (CCI 05/07/2018)
# [3] "Brachyurophis roperi"       No data available (CCI 05/07/2018)
# [4] "Brachyurophis semifasciatus" No data available (CCI 05/07/2018)
# [5] "Bradypodion caffer"  Added data for sex.dim (CCI 06/07/2018)
db.rep[41:45, "binomial"]
# [1] "Bradypodion damaranum"    Added data for sex.dim (CCI 06/07/2018)
# [2] "Bradypodion gutturale"    Added data for sex.dim (CCI 06/07/2018)
# [3] "Bradypodion occidentale"   Added data for sex.dim (CCI 06/07/2018)
# [4] "Bradypodion pumilum"       Multiple patternity clutches so should be polygamous; ASR derived from study evaluating survival and immigrtaion, 37 fem and 60 males captured (CCI 06/07/2018)
# [5] "Bradypodion taeniabronchum"Added data for sex.dim (CCI 06/07/2018)
db.rep[46:50, "binomial"]
# [1] "Bradypodion transvaalense" Added data for sex.dim (CCI 06/07/2018)
# [2] "Bradypodion ventrale"     Added data for sex.dim (CCI 06/07/2018)
# [3] "Brookesia confidens"      No data available (CCI 06/07/2018)
# [4] "Brookesia desperata"      No data available (CCI 06/07/2018)
# [5] "Brookesia micra"   No data available (CCI 06/07/2018)
db.rep[51:60, "binomial"]
# [1] "Brookesia tristis"
# [2] "Caiman crocodilus"
# [3] "Caiman yacare"
# [4] "Calamaria gervaisi"
# [5] "Calamaria lumbricoidea"
# [6] "Calamaria virgulata"
# [7] "Carphophis amoenus"
# [8] "Carphophis vermis"
# [9] "Cerberus australis"
# [10] "Cerberus rynchops"
